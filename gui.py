
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer

from pathlib import Path
import main

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\tcoll\WeatherGUI\WeatherGUI\build\assets\frame0")
DIRECTIONS = ['N', 'NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW']

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

def base(canvas):
    canvas.place(x = 0, y = 0)
    canvas.create_rectangle(
        0,
        0.0,
        1080.0,
        720.0,
        fill="#87CEEB",
        outline="")

    canvas.create_rectangle(
        1080.0,
        0,
        1440.0,
        720.0,
        fill="#BBBBBB",
        outline="")

    canvas.create_rectangle(
        0,
        720.0,
        1440.0,
        1080.0,
        fill="#FF7A00",
        outline="")

    canvas.create_rectangle(
        725,
        725.0,
        1075.0,
        1075.0,
        fill="#252525",
        outline="")

    canvas.create_rectangle(
        1085.0,
        725.0,
        1435.0,
        1075.0,
        fill="#252525",
        outline="")

    canvas.create_rectangle(
        365,
        725.0,
        715,
        1075.0,
        fill="#252525",
        outline="")

    canvas.create_rectangle(
        5,
        725.0,
        355,
        1075.0,
        fill="#252525",
        outline="")

    canvas.create_rectangle(
        10,
        850.0,
        350,
        1070.0,
        fill="#A2A2A2",
        outline="")

    canvas.create_rectangle(
        1090.0,
        850.0,
        1430.0,
        1070.0,
        fill="#A2A2A2",
        outline="")

    canvas.create_rectangle(
        730,
        850.0,
        1070.0,
        1070.0,
        fill="#A2A2A2",
        outline="")

    canvas.create_rectangle(
        370,
        850.0,
        710,
        1070.0,
        fill="#A2A2A2",
        outline="")

    canvas.create_rectangle(
        5,
        250,
        1075.0,
        715.0,
        fill="#D9D9D9",
        outline="")
    return canvas

def show_days(canvas):
    #Day 1
    canvas.create_text(
        125,
        737.0,
        anchor="nw",
        text="Temp:\nRealFeel:\nHumid:\nRain %:\nSnow %:",
        fill="#FFFFFF",
        font=("Inter", 16 * -1)
    )

    #Day 2
    canvas.create_text(
        490,
        734.0,
        anchor="nw",
        text="Temp:\nRealFeel:\nHumid:\nRain %:\nSnow %:",
        fill="#FFFFFF",
        font=("Inter", 16 * -1)
    )

    #Day 3
    canvas.create_text(
        850,
        737.0,
        anchor="nw",
        text="Temp:\nRealFeel:\nHumid:\nRain %:\nSnow %:",
        fill="#FFFFFF",
        font=("Inter", 16 * -1)
    )

    #Day 4
    canvas.create_text(
        1210.0,
        737.0,
        anchor="nw",
        text="Temp:\nRealFeel:\nHumid:\nRain %:\nSnow %:",
        fill="#FFFFFF",
        font=("Inter", 16 * -1)
    )
    return canvas

#Current Weather
def show_cur(canvas, temp, rf, humid, windS, windD, precip, pressure, weatherCode):
    direction = round(windD/22.5) if windD<348.5 else 361
    canvas.create_text(
        500,
        5,
        anchor="nw",
        text=("RealFeel: " + str(rf) + "°F" +
            "\nHumidity: " + str(humid) + "%" +
            "\nWind: " + str(windS) + " MPH " + str(DIRECTIONS[direction % 16]) +
            "\nPrecipitation Chance: " + str(precip) + "%" +
            "\nPressure: " + str(pressure) + "hPa" +
            "\nWeather Conditions: " + str(weatherCode)),
        fill="#000000",
        font=("Inter", 24 * -1)
    )

    #Current Temperature
    canvas.create_text(
        220,
        75,
        anchor="nw",
        text= str(temp) + "°F",
        fill="#FFFFFF",
        font=("PTSerif Caption", 64 * -1)
    )
    return canvas

def show_facts(canvas):
    canvas.create_text(
    1085.0,
    5,
    anchor="nw",
    text="Insert Fun text here",
    fill="#000000",
    font=("Inter", 16 * -1)
    )

    canvas.create_text(
    5.0,
    15,
    anchor="sw",
    text="Powered by tomorrow.io",
    fill="#AAAAAA",
    font=("Inter", 12 * -1)
    )
    return canvas


